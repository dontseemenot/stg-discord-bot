name: publish

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.actor }}/stg-discord-bot:prod

jobs:

  publish:
    name: publish image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Login
        run:
          echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Add secrets
        run: |
          echo -e "${{ secrets.APPLICATION_PROPERTIES_PROD }}" > application.properties


      - name: Build and Publish
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  deploy:
    needs: publish
    name: deploy image
    runs-on: ubuntu-latest

    steps:
      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/id_rsa
          chmod 644 ~/.ssh/known_hosts

      # Clone the repo into the runner
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Copy files into server
      - name: connect and pull
        run: |
          scp -i ~/.ssh/id_rsa ${GITHUB_WORKSPACE}/docker-compose-prod.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/projects/stg-discord-bot
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd ${{ secrets.WORK_DIR }} && 
            echo ${{ secrets.DB_PASSWORD }} > db_password.txt && 
            sudo docker compose -f docker-compose-prod.yml -p stg-prod pull && 
            sudo docker compose -f docker-compose-prod.yml -p stg-prod up -d && 
            exit
          "
      - name: cleanup
        run: rm -rf ~/.ssh
